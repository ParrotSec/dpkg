.\" dpkg manual page - deb-substvars(5)
.\"
.\" Copyright © 1995-1996 Ian Jackson <ijackson@chiark.greenend.org.uk>
.\" Copyright © 2000 Wichert Akkerman <wakkerma@debian.org>
.\" Copyright © 2006-2009,2012-2015 Guillem Jover <guillem@debian.org>
.\" Copyright © 2009-2010 Rapha\(:el Hertzog <hertzog@debian.org>
.\"
.\" This is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <https://www.gnu.org/licenses/>.
.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH deb\-substvars 5 2019-03-25 1.19.6 "suite dpkg"
.nh
.SH NOM
deb\-substvars \- Variables de substitution de source Debian
.
.SH SYNOPSIS
substvars
.
.SH DESCRIPTION
Avant que \fBdpkg\-source\fP, \fBdpkg\-gencontrol\fP et \fBdpkg\-genchanges\fP
n'\('ecrivent leurs informations de contr\(^ole (dans le fichier source de
contr\(^ole \fB.dsc\fP pour \fBdpkg\-source\fP et sur la sortie standard pour
\fBdpkg\-gencontrol\fP et \fBdpkg\-genchanges\fP), ils r\('ealisent quelques
substitutions de variables dans le fichier de sortie.

A variable substitution has the form \fB${\fP\fIvariable\-name\fP\fB}\fP.  Variable
names consist of alphanumerics (a\-zA\-Z0\-9), hyphens (\-) and colons (:) and
start with an alphanumeric, and are case\-sensitive, even though they might
refer to other entities which are case\-preserving.  Variable substitutions
are performed repeatedly until none are left; the full text of the field
after the substitution is rescanned to look for more substitutions.

Quand toutes les substitutions ont \('et\('e faites, chaque occurrence de la
cha\(^ine \fB${}\fP (laquelle n'est pas une substitution autoris\('ee) est remplac\('ee
par un signe \fB$\fP.

Alors que le remplacement de variables est effectu\('e sur tous les champs de
contr\(^ole, certains de ces champs sont utilis\('es et n\('ecessaires pendant la
construction alors m\(^eme que la substitution n'a pas encore pu \(^etre
effectu\('ee. Cela explique pourquoi il n'est pas possible d'utiliser de
variables dans les champs \fBPackage\fP, \fBSource\fP et \fBArchitecture\fP.

La substitution de variables se fait dans le contenu des champs apr\(`es leur
analyse. En cons\('equence, si vous souhaitez qu'une variable soit remplac\('ee
sur plusieurs lignes, il n'est pas n\('ecessaire de placer une espace apr\(`es le
retour \(`a la ligne. Cela se fait implicitement quand le champ est
affich\('e. Par exemple, si la variable \fB${Description}\fP est positionn\('ee sur
\(Fo\ foo est bar.${Newline}foo est super.\ \(Fc et si vous avez le champ suivant\ :

 Description: application foo
  ${Description}
  .
  Encore du texte.

Le r\('esultat final sera\ :

 Description: application foo
  foo est bar.
  foo est super.
  .
  Encore du texte.

On peut d\('efinir les variables en utilisant l'option commune \fB\-V\fP. On peut
aussi se servir du fichier \fBdebian/substvars\fP (ou tout autre fichier avec
l'option \fB\-T\fP). Ce fichier est compos\('e de lignes de la forme suivante\ :
\fInom\fP\fB=\fP\fIvaleur\fP. Les espaces r\('esiduelles sur chaque ligne, les lignes
vides et les lignes qui commencent par un symbole \fB#\fP sont ignor\('ees.

En outre, les variables standard suivantes sont disponibles\ :
.TP 
\fBArch\fP
L'architecture de l'h\(^ote actuel (c'est\-\(`a\-dire l'architecture pour laquelle
le paquet est construit, \('equivalent de \fBDEB_HOST_ARCH\fP).
.TP 
\fBsource:Version\fP
Version du paquet source (depuis dpkg\ 1.13.19).
.TP 
\fBsource:Upstream\-Version\fP
La version amont du paquet source, avec \('eventuellement l'\(Fo\ epoch\ \(Fc de la
version Debian (depuis dpkg\ 1.13.19).
.TP 
\fBbinary:Version\fP
La version du paquet binaire (qui peut \(^etre diff\('erente de \fBsource:Version\fP
dans un binNMU par exemple\ ; depuis dpkg\ 1.13.19).
.TP 
\fBSource\-Version\fP
La version du paquet source, selon le fichier changelog. Cette variable est
maintenant \fBobsol\(`ete\fP et produit une erreur lors de son utilisation car sa
signification est distincte de sa fonction. Utilisez plut\(^ot
\fBsource:Version\fP ou \fBbinary:Version\fP.
.TP 
\fBsource:Synopsis\fP
Le synopsis du paquet source, extrait du champ \fBDescription\fP du paragraphe
source, s'il existe (depuis dpkg\ 1.19.0).
.TP 
\fBsource:Extended\-Description\fP
La description \('etendue du paquet source, extraite du champ \fBDescription\fP du
paragraphe source, s'il existe (depuis dpkg\ 1.19.0).
.TP 
\fBInstalled\-Size\fP
La taille approximative de tous les fichiers install\('es du paquet. Cette
valeur est copi\('ee dans le champ ad\('equat du fichier \(Fo\ control\ \(Fc\ ; quand on
fixe cette variable, cela modifie la valeur de ce champ. Quand elle est
ind\('etermin\('ee, \fBdpkg\-gencontrol\fP calcule la valeur par d\('efaut en
additionnant la taille de chaque fichier ordinaire et lien symbolique
arrondie en unit\('e d'un kio utilis\('ee et sur la base d'un kio pour n'importe
quel type d'objet du syst\(`eme de fichiers.

\fBRemarque\fP\ : Il faut tenir compte que cela ne peut jamais \(^etre qu'une
approximation dans la mesure o\(`u la taille v\('eritablement occup\('ee sur un
syst\(`eme install\('e d\('epend largement du syst\(`eme de fichiers utilis\('e et de ses
param\(`etres, ce qui pourrait finir par l'utilisation de plus ou moins
d'espace que ce qui est sp\('ecifi\('e dans ce champ.
.TP 
\fBExtra\-Size\fP
L'espace disque suppl\('ementaire utilis\('e pour l'installation du paquet. Quand
on fixe cette variable, on ajoute sa valeur \(`a la valeur de la variable
\fBInstalled\-Size\fP (qu'elle soit d\('efinie explicitement ou calcul\('ee par
d\('efaut) avant qu'elle soit copi\('ee dans le champ \fBInstalled\-Size\fP du fichier
\(Fo\ control\ \(Fc.
.TP 
\fBS:\fP\fInom\-de\-champ\fP
La valeur du champ \fInom\-de\-champ\fP du paragraphe source (qui doit \(^etre
classiquement en majuscules, depuis dpkg\ 1.18.11). Quand on fixe ces
variables, cela ne prend effet que l\(`a o\(`u elles sont explicitement
d\('evelopp\('ees. Ces variables ne sont disponibles que lors de la cr\('eation des
fichiers de contr\(^ole binaires.
.TP 
\fBF:\fP\fInom\-de\-champ\fP
La valeur du champ \fInom\-de\-champ\fP affich\('ee en sortie (qui doit \(^etre
classiquement en majuscules). Quand on fixe ces variables, cela ne prend
effet que l\(`a o\(`u elles sont explicitement d\('evelopp\('ees.
.TP 
\fBFormat\fP
La version du format du fichier \fB.changes\fP produite par la version des
scripts construisant le source. Quand on d\('etermine cette variable, le
contenu du champ \fBFormat\fP dans le fichier \fB.changes\fP est aussi modifi\('e.
.TP 
\fBNewline\fP, \fBSpace\fP, \fBTab\fP
Ces variables contiennent chacune le caract\(`ere correspondant.
.TP 
\fBshlibs:\fP\fIchamp\-d\('ependance\fP
Les variables d\('etermin\('ees de cette fa\(,con sont produites par
\fBdpkg\-shlibdeps\fP.
.TP 
\fBdpkg:Upstream\-Version\fP
La version amont de dpkg (depuis dpkg\ 1.13.19).
.TP 
\fBdpkg:Version\fP
La version compl\(`ete de dpkg (depuis dpkg\ 1.13.19).
.LP
Quand une variable est r\('ef\('erenc\('ee mais n'est pas d\('efinie, cela produit un
avertissement et une valeur vide est suppos\('ee.
.
.SH FICHIERS
.TP 
\fBdebian/substvars\fP
La liste des variables de substitution et leurs valeurs.
.
.SH "VOIR AUSSI"
.ad l
\fBdpkg\fP(1), \fBdpkg\-genchanges\fP(1), \fBdpkg\-gencontrol\fP(1),
\fBdpkg\-shlibdeps\fP(1), \fBdpkg\-source\fP(1).
.SH TRADUCTION
Ariel VARDI <ariel.vardi@freesbee.fr>, 2002.
Philippe Batailler, 2006.
Nicolas Fran\(,cois, 2006.
Veuillez signaler toute erreur \(`a <debian\-l10n\-french@lists.debian.org>.
