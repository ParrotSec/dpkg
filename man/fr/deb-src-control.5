.\" dpkg manual page - deb-src-control(5)
.\"
.\" Copyright © 2010 Oxan van Leeuwen <oxan@oxanvanleeuwen.nl>
.\" Copyright © 2011 Rapha\(:el Hertzog <hertzog@debian.org>
.\" Copyright © 2011-2015 Guillem Jover <guillem@debian.org>
.\"
.\" This is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <https://www.gnu.org/licenses/>.
.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH deb\-src\-control 5 2019-03-25 1.19.6 "suite dpkg"
.nh
.SH NOM
deb\-src\-control \- Format du fichier principal de contr\(^ole dans les paquets
source Debian
.
.SH SYNOPSIS
debian/control
.
.SH DESCRIPTION
Chaque paquet source Debian contient un fichier \(Fo\ control\ \(Fc ma\(^itre, qui
contient au moins deux paragraphes, s\('epar\('es par une ligne vide. Le premier
paragraphe donne toutes les informations \(`a propos du paquet source en
g\('en\('eral et chaque paragraphe qui suit d\('ecrit exactement un paquet
binaire. Chaque paragraphe contient au moins un champ. Un champ commence par
le nom du champ, par exemple \fBPackage\fP ou \fBSection\fP (la casse n'est pas
significative), suivi d'un caract\(`ere \(Fo\ deux\-points\ \(Fc, du contenu du champ et
d'un retour \(`a la ligne. Les champs \(`a lignes multiples sont aussi possibles,
mais chaque ligne suppl\('ementaire, qui ne comporte pas de nom de champ, doit
commencer par au moins une espace. Le contenu des champs \(`a lignes multiples
est en g\('en\('eral r\('eassembl\('e en une ligne unique par les outils (sauf pour le
champ \fBDescription\fP, voir ci\-dessous). Pour inclure des lignes vides dans
un champ \(`a lignes multiples, il est n\('ecessaire de mettre un point apr\(`es
l'espace initiale. Les lignes commen\(,cant par \fB\(Fo\ #\ \(Fc\fP sont trait\('ees comme
des commentaires.
.
.SH "LES CHAMPS SOURCE"
.TP 
\fBSource:\fP \fInom\-du\-paquet\-source\fP (requis)
The value of this field is the name of the source package, and should match
the name of the source package in the debian/changelog file. A package name
must consist only of lowercase letters (a\-z), digits (0\-9), plus (+) and
minus (\-) signs, and periods (.). Package names must be at least two
characters long and must start with a lowercase alphanumeric character
(a\-z0\-9).

.TP 
\fBMaintainer:\fP \fInom\-complet\-et\-adresse\-\('electronique\fP (recommand\('e)
Le format de ce champ sera \(Fo\ Jean Dupont <jdupont@foo.com>\ \(Fc\ ; il
indique le responsable actuel du paquet, par opposition \(`a l'auteur du
logiciel ou au responsable originel.

.TP 
\fBUploaders:\fP\fI nom\-complet\-et\-adresse\-\('electronique\fP
Affiche les noms et les adresses \('electroniques des co\-responsables du
paquet, au m\(^eme format que le champ \fBMaintainer\fP. Des co\-responsables
multiples peuvent \(^etre s\('epar\('es par des virgules.

.TP 
\fBStandards\-Version:\fP \fIcha\(^ine\-de\-la\-version\fP
Ce champ indique la version la plus r\('ecente des normes de la charte de la
distribution auxquelles ce paquet se conforme.

.TP 
\fBDescription\fP \fIdescription\-courte\fP
.TQ
\fB \fP\fIdescription\-longue\fP
Le format de la description du paquet est un r\('esum\('e bref sur la premi\(`ere
ligne (apr\(`es le champ \fBDescription\fP). Les lignes suivantes peuvent servir \(`a
une description plus longue et plus d\('etaill\('ee. Chaque ligne de cette
description longue doit \(^etre pr\('ec\('ed\('ee d'une espace\ ; quand c'est une ligne
blanche, elle doit contenir un seul \(Fo\ \fB.\fP\ \(Fc apr\(`es cette espace.

.TP 
\fBHomepage:\fP\fI URL\fP
URL de la page d'accueil du projet amont.

.TP 
\fBBugs:\fP\fI URL\fP
L'\fIURL\fP du syst\(`eme de suivi de bogues (BTS) de ce paquet. Le format utilis\('e
est \fItype_de_bts\fP\fB://\fP\fIadresse_du_btsE\fP, par exemple
\fBdebbugs://bugs.debian.org\fP. Ce champ est en g\('en\('eral inutile.

.TP 
\fBRules\-Requires\-Root:\fP \fBno\fP|\fBbinary\-targets\fP|\fImots\-cl\('es\-impl\('ementation\fP
Ce champ est utilis\('e pour indiquer si le fichier \fBdebian/rules\fP exige des
droits (fake)root pour ex\('ecuter certaines de ses cibles et quand, si c'est
le cas.
.RS
.TP 
\fBno\fP
Les cibles binaires n'exigeront aucun (fake)root.
.TP 
\fBbinary\-targets\fP
Les cibles binaires doivent toujours \(^etre ex\('ecut\('ees avec les droits
(fake)root. C'est la valeur par d\('efaut quand le champ est omis\ ; l'ajout du
champ avec un \fBbinary\-targets\fP explicite, alors qu'il n'est pas strictement
n\('ecessaire, marque qu'il a \('et\('e analys\('e pour cette exigence.
.TP 
\fImots\-cl\('es\-impl\('ementation\fP
Il s'agit d'une liste, s\('epar\('ee par des espaces, de mots\-cl\('es qui d\('efinissent
quand (fake)root est exig\('e.

Les mots\-cl\('es sont compos\('es de \fIespace\-de\-nommage\fP/\fIcas\fP. La partie
\fIespace\-de\-nommage\fP ne peut pas inclure de \(Fo\ /\ \(Fc ou d'espace. La partie
\fIcas\fP ne peut pas inclure d'espace. Par ailleurs, les deux parties doivent
\(^etre enti\(`erement compos\('ees de caract\(`eres ASCII imprimables.

Chaque outil ou paquet d\('efinira un espace de nommage nomm\('e d'apr\(`es lui\-m\(^eme
et fournira le nombre des cas o\(`u (fake)root est exig\('e. (Voir \(Fo\ Mots\-cl\('es
fournis par l'impl\('ementation\ \(Fc dans \fIrootless\-builds.txt\fP).

Quand le champ est d\('efini pour un des \fImots\-cl\('es\-impl\('ementation\fP, le
constructeur exposera une interface qui est utilis\('ee pour ex\('ecuter une
commande avec les droits (fake)root. (Voir \(Fo\ API pour obtenir les droits
root\ \(Fc dans \fIrootless\-builds.txt\fP).
.RE

.TP 
\fBTestsuite:\fP\fI liste\-de\-noms\fP
.TQ
\fBTestsuite\-Triggers:\fP\fI liste\-de\-paquets\fP
Ces champs sont d\('ecrits dans la page de manuel de \fBdsc\fP(5), car ils sont
cr\('e\('es \(`a partir des informations d\('eduites de \fBdebian/tests/control\fP ou
copi\('es litt\('eralement dans le fichier \(Fo\ control\ \(Fc du paquet source.

.TP 
\fBVcs\-Arch:\fP\fI URL\fP
.TQ
\fBVcs\-Bzr:\fP\fI URL\fP
.TQ
\fBVcs\-Cvs:\fP\fI URL\fP
.TQ
\fBVcs\-Darcs:\fP\fI URL\fP
.TQ
\fBVcs\-Git:\fP\fI URL\fP
.TQ
\fBVcs\-Hg:\fP\fI URL\fP
.TQ
\fBVcs\-Mtn:\fP\fI URL\fP
.TQ
\fBVcs\-Svn:\fP\fI URL\fP
Ce champ indique l'\fIURL\fP du syst\(`eme de gestion de version utilis\('e pour la
gestion du paquet. Les syst\(`emes g\('er\('es sont \fBArch\fP, \fBBzr\fP (Bazaar), \fBCvs\fP,
\fBDarcs\fP, \fBGit\fP, \fBHg\fP (Mercurial), \fBMtn\fP (Monotone) et \fBSvn\fP
(Subversion). En g\('en\('eral, ce champ fait r\('ef\('erence \(`a la derni\(`ere version du
paquet, c'est\-\(`a\-dire la branche principale ou le \(Fo\ trunk\ \(Fc.

.TP 
\fBVcs\-Browser:\fP\fI URL\fP
Indique l'\fIURL\fP de l'interface web permettant de parcourir le d\('ep\(^ot du
syst\(`eme de gestion de version.

.TP 
\fBOrigin:\fP\fI nom\fP
Indique le nom de la distribution dont le paquet provient. Ce champ n'est
souvent pas n\('ecessaire.

.TP 
\fBSection:\fP \fIsection\fP
Champ g\('en\('eral qui indique la cat\('egorie d'un paquet\ ; cette cat\('egorie est
fond\('ee sur le programme que ce paquet installe. \fButils\fP, \fBnet\fP, \fBmail\fP,
\fBtext\fP, \fBx11\fP,\ etc., repr\('esentent quelques cat\('egories habituelles.

.TP 
\fBPriority:\fP\fI priorit\('e\fP
D\('efinit l'importance du paquet \(`a l'int\('erieur du syst\(`eme
g\('en\('eral. \fBrequired\fP, \fBstandard\fP, \fBoptional\fP, \fBextra\fP,\ etc., repr\('esentent
des priorit\('es habituelles.

Les champs \fBSection\fP et \fBPriority\fP poss\(`edent un ensemble d\('efini de valeurs
accept\('ees, tir\('e de la Charte particuli\(`ere de la distribution.

.TP 
\fBBuild\-Depends:\fP\fI liste\-de\-paquets\fP
Liste de paquets \(`a installer et configurer pour pouvoir construire \(`a partir
du paquet source. Ces d\('ependances doivent \(^etre satisfaites lors de la
construction des paquets binaires d\('ependant ou non de l'architecture, et des
paquets source. Ajouter une d\('ependance \(`a ce champ n'aura pas exactement le
m\(^eme effet que de l'inclure \(`a la fois dans \fBBuild\-Depends\-Arch\fP et
\fBBuild\-Depends\-Indep\fP, parce que la d\('ependance a aussi besoin d'\(^etre prise
en compte lors de la construction du paquet source.
.
.TP 
\fBBuild\-Depends\-Arch:\fP\fIliste\-de\-paquets\fP
Liste analogue \(`a \fBBuild\-Depends\fP, mais restreinte aux paquets n\('ecessaires
pour construire les paquets d\('ependants de l'architecture. Les paquets
indiqu\('es dans \fBBuild\-Depends\fP sont alors \('egalement install\('es. Ce champ est
g\('er\('e depuis la version\ 1.16.4 de dpkg\ ;\ pour pouvoir construire des paquets
avec des versions plus anciennes de dpkg, il est pr\('ef\('erable d'utiliser
\fBBuild\-Depends\fP.

.TP 
\fBBuild\-Depends\-Indep:\fP\fI liste\-de\-paquets\fP
Liste analogue \(`a \fBBuild\-Depends\fP, mais restreinte aux paquets n\('ecessaires
pour construire les paquets ind\('ependants de l'architecture. Les paquets
indiqu\('es dans \fBBuild\-Depends\fP sont alors aussi install\('es.

.TP 
\fBBuild\-Conflicts:\fP\fI liste de paquets\fP
Liste de paquets qui ne doivent pas \(^etre install\('es lors de la construction
du paquet, par exemple s'ils interf\(`erent avec le syst\(`eme de construction
utilis\('e. Si une d\('ependance est ajout\('ee \(`a cette liste, l'effet sera le m\(^eme
que si elle \('etait ajout\('ee \(`a la fois dans \fBBuild\-Conflicts\-Arch\fP et
\fBBuild\-Conflicts\-Indep\fP, en ayant de plus l'effet d'\(^etre prise en compte
pour les constructions de paquets uniquement source (\(Fo\ source\-only
builds\ \(Fc).

.TP 
\fBBuild\-Conflicts\-Arch:\fP\fI liste\-de\-paquets\fP
Identique \(`a \fBBuild\-Conflicts\fP, mais n'est prise en compte que pour les
paquets d\('ependants de l'architecture. Ce champ est g\('er\('e depuis la
version\ 1.16.4 de dpkg\ ; pour pouvoir construire des paquets avec des
versions plus anciennes de dpkg, il est pr\('ef\('erable d'utiliser
\fBBuild\-Conflicts\fP.

.TP 
\fBBuild\-Conflicts\-Indep:\fP\fI liste\-de\-paquets\fP
liste analogue \(`a \fBBuild\-Conflicts\fP mais restreinte \(`a la construction des
paquets ind\('ependants de l'architecture.

.PP
La syntaxe des champs \fBBuild\-Depends\fP, \fBBuild\-Depends\-Arch\fP et
\fBBuild\-Depends\-Indep\fP est une liste de groupes contenant des paquets
alternatifs. Chaque groupe est une liste de paquets s\('epar\('es par des barres
verticales (le symbole du tube) \(Fo\ \fB|\fP\ \(Fc. Les groupes sont s\('epar\('es par des
virgules \(Fo\ \fB,\fP\ \(Fc, et la liste peut finir par une virgule qui peut \(^etre
\('elimin\('ee lors de la cr\('eation des champs pour \fBdeb\-control\fP(5) (depuis
dpkg\ 1.10.14). Une virgule repr\('esente un \(Fo\ ET\ \(Fc logique et une barre
verticale repr\('esente un \(Fo\ OU\ \(Fc logique\ ; le tube repr\('esente un lien plus
fort. Chaque nom de paquet est suivi de fa\(,con optionnelle par un type
d'architecture entre crochets apr\(`es deux\-points \(Fo\ \fB:\fP\ \(Fc, \('eventuellement
suivi par un num\('ero de version entre parenth\(`eses \(Fo\ \fB(\fP\ \(Fc et \(Fo\ \fB)\fP\ \(Fc, une
sp\('ecification d'architecture entre crochets \(Fo\ \fB[\fP\ \(Fc et \(Fo\ \fB]\fP\ \(Fc, et une
formule de restriction constitu\('ee d'une ou plusieurs listes de noms de
profil entre chevrons \(Fo\ \fB<\fP\ \(Fc et \(Fo\ \fB>\fP\ \(Fc.

La syntaxe des champs \fBBuild\-Conflicts\fP, \fBBuild\-Conflicts\-Arch\fP et
\fBBuild\-Conflicts\-Indep\fP est une liste de paquets s\('epar\('es par des virgules
qui repr\('esentent le \(Fo\ ET\ \(Fc logique et peut finir par une virgule qui peut
\(^etre \('elimin\('ee lors de la cr\('eation des champs pour \fBdeb\-control\fP(5) (depuis
dpkg\ 1.10.14). L'indication de paquets alternatifs avec une barre verticale
(le symbole du tube) \(Fo\ |\ \(Fc n'est pas prise en charge. Chaque nom de paquet
peut \(^etre suivi de fa\(,con optionnelle par un num\('ero de version entre
parenth\(`eses, un type d'architecture entre crochets et une formule de
restriction constitu\('ee d'une ou plusieurs listes de noms de profil entre
chevrons.

Un nom de type d'architecture peut \(^etre un nom d'architecture r\('eelle de
Debian (depuis dpkg\ 1.16.5), \fBany\fP (depuis dpkg\ 1.16.2) ou \fBnative\fP
(depuis dpkg\ 1.16.5). S'il est omis, la valeur par d\('efaut des champs
\fBBuild\-Depends\fP est l'architecture de l'h\(^ote actuel, la valeur par d\('efaut
des champs \fBBuild\-Conflicts\fP est \fBany\fP. Un nom d'architecture r\('eelle de
Debian correspondra exactement \(`a l'architecture pour ce nom de paquet,
\fBany\fP correspondra \(`a toute architecture pour ce nom de paquet si le paquet
a \('et\('e marqu\('e \fBMulti\-Arch: allowed\fP, et \fBnative\fP correspondra \(`a
l'architecturede construction actuelle si le paquet n'a \('et\('e marqu\('e
\fBMulti\-Arch: foreign\fP.

Une contrainte sur le num\('ero de version peut commencer par
\(Fo\ \fB>>\fP\ \(Fc, et dans ce cas toute version sup\('erieure correspondra, et
il peut indiquer (ou pas) le num\('ero de r\('evision pour le paquet Debian (les
deux num\('eros \('etant s\('epar\('es par un trait d'union). Voici les relations
accept\('ees pour les versions\ : \(Fo\ \fB>>\fP\ \(Fc pour sup\('erieur \(`a,
\(Fo\ \fB<<\fP\ \(Fc pour inf\('erieur \(`a, \(Fo\ \fB>=\fP\ \(Fc pour sup\('erieur ou \('egal,
\(Fo\ \fB<=\fP\ \(Fc pour inf\('erieur ou \('egal, et \(Fo\ \fB=\fP\ \(Fc pour \('egal \(`a.

Une indication d'architecture consiste en un ou plusieurs noms
d'architectures, s\('epar\('es par des espaces. Un nom d'architecture peut \(^etre
pr\('ec\('ed\('e d'un point d'exclamation qui correspond alors au \(Fo\ NON\ \(Fc logique.

Une formule de restriction consiste en une ou plusieurs listes de
restriction s\('epar\('ees par des espaces. Chaque liste de restriction est
incluse entre chevrons. Les \('el\('ements des listes de restriction sont des noms
de profils de construction s\('epar\('es par des espaces et pouvant \(^etre pr\('efix\('es
d'un point d'exclamation repr\('esentant un \(Fo\ NON\ \(Fc logique. Une formule de
restriction repr\('esente une forme normale disjonctive.

Veuillez noter que les d\('ependances des paquets du jeu \fBbuild\-essential\fP
peuvent \(^etre omises et qu'il n'est pas possible de d\('eclarer des conflits
avec ces paquets. La liste des paquets concern\('es est fournie par le paquet
build\-essential.


.SH "CHAMPS BINAIRES"

.LP
Veuillez noter que les champs \fBPriority\fP, \fBSection\fP et \fBHomepage\fP peuvent
\(^etre plac\('es dans le paragraphe d'un paquet binaire et leur valeur remplace
alors celle du paquet source.

.TP 
\fBPackage:\fP \fInom\-du\-paquet\-binaire\fP (requis)
Ce champ sert \(`a indiquer le nom du paquet binaire. Les restrictions sont les
m\(^emes que celles des paquets source.

.TP 
\fBPackage\-Type:\fP \fBdeb\fP|\fBudeb\fP|\fItype\fP
Ce champ indique le type de paquet. La valeur \fBudeb\fP est \(`a utiliser pour
les paquets \(`a taille contr\(^ol\('ee utilis\('es par l'installateur Debian. La valeur
\fBdeb\fP est la valeur par d\('efaut qui est utilis\('ee si le champ n'est pas
pr\('esent. De nouveaux types pourraient \(^etre ajout\('es au fil du temps.

.TP 
\fBArchitecture:\fP \fIarch\fP|\fBall\fP|\fBany\fP (requis)
Ce champ indique l'architecture mat\('erielle sur laquelle le paquet peut \(^etre
utilis\('e. Les paquets qui peuvent \(^etre utilis\('es sur toute architecture
doivent utiliser le champ \fBany\fP. Les paquets ind\('ependants de
l'architecture, tels les scripts shell ou Perl ou la documentation utilisent
la valeur \fBall\fP. Pour restreindre un paquet \(`a certaines architectures,
leurs noms doivent \(^etre indiqu\('es s\('epar\('es par des espaces. Il est \('egalement
possible d'utiliser des noms g\('en\('eriques d'architectures dans cette liste
(voir \fBdpkg\-architecture\fP(1) pour plus d'informations sur ces architectures
g\('en\('eriques).

.TP 
\fBBuild\-Profiles:\fP \fIformule\-de\-restriction\fP
Ce champ pr\('ecise les conditions pour lesquelles ce paquet binaire est ou
n'est pas construit. Cette condition est exprim\('ee en utilisant la m\(^eme
syntaxe de formule de restriction qui provient du champ \fBBuild\-Depends\fP.

Si un paragraphe de paquet binaire ne contient pas ce champ, cela signifie
de fa\(,con implicite que ce paquet se construit avec tous les profils de
construction (y compris aucun profil).

En d'autres termes, si un paragraphe de paquet binaire est annot\('e d'un champ
\fBBuild\-Profiles\fP non vide, alors, ce paquet binaire est cr\('e\('e si et
seulement si la condition exprim\('ee par l'expression en forme normale
conjonctive est \('evalu\('ee \(`a vrai.

.TP 
\fBEssential:\fP \fByes\fP|\fBno\fP
.TQ
\fBBuild\-Essential:\fP \fByes\fP|\fBno\fP
.TQ
\fBMulti\-Arch:\fP \fBsame\fP|\fBforeign\fP|\fBallowed\fP|\fBno\fP
.TQ
\fBTag:\fP\fI liste\-d'\('etiquettes\fP
.TQ
\fBDescription:\fP \fIdescription\-courte\fP (recommand\('e)
Ces champs sont d\('ecrits dans la page de manuel de \fBdeb\-control\fP(5), car ils
sont copi\('es litt\('eralement dans le fichier \(Fo\ control\ \(Fc du paquet binaire.

.TP 
\fBDepends:\fP\fI liste\-de\-paquets\fP
.TQ
\fBPre\-Depends:\fP\fI liste\-de\-paquets\fP
.TQ
\fBRecommends:\fP\fI liste\-de\-paquets\fP
.TQ
\fBSuggests:\fP\fI liste\-de\-paquets\fP
.TQ
\fBBreaks:\fP\fI liste\-de\-paquets\fP
.TQ
\fBEnhances:\fP\fI liste\-de\-paquets\fP
.TQ
\fBReplaces:\fP\fI liste\-de\-paquets\fP
.TQ
\fBConflicts:\fP\fI liste\-de\-paquets\fP
.TQ
\fBProvides:\fP\fI liste\-de\-paquets\fP
.TQ
\fBBuilt\-Using:\fP\fI liste\-de\-paquets\fP
Ces champs d\('eclarent les relations entre les paquets. Ils sont discut\('es dans
la page de manuel de \fBdeb\-control\fP(5). Quand ces champs se trouvent dans
\fIdebian/control\fP, ils peuvent aussi se terminer par une virgule (depuis
dpkg\ 1.10.14)\ ; ils comprennent des sp\('ecifications d'architecture et des
formules de restriction qui seront r\('eduites lors de la g\('en\('eration des champs
pour \fBdeb\-control\fP(5).

.TP 
\fBSubarchitecture:\fP\fI valeur\fP
.TQ
\fBKernel\-Version:\fP\fI valeur\fP
.TQ
\fBInstaller\-Menu\-Item:\fP\fI valeur\fP
Ces champs sont utilis\('es par l'installateur dans les \fBudeb\fP et ne sont en
g\('en\('eral pas n\('ecessaires. Veuillez consulter
/usr/share/doc/debian\-installer/devel/modules.txt fourni avec le paquet
\fBdebian\-installer\fP pour plus de d\('etails.

.SH "LES CHAMPS UTILISATEUR"
Il est autoris\('e d'ajouter au fichier de contr\(^ole des champs suppl\('ementaires
d\('efinis par l'utilisateur. L'outil ignorera ces champs. Si vous souhaitez
que ces champs soient copi\('es dans ces fichiers de sortie, tels que les
paquets binaires, vous devez utiliser un sch\('ema de nommage personnalis\('e\ :
les champs d\('emarreront par un \fBX\fP, suivi de z\('ero ou plusieurs des lettres
\fBSBC\fP et un trait d'union.

.TP 
\fBS\fP
Ce champ appara\(^itra dans le fichier de contr\(^ole du paquet des sources, voir
\fBdsc\fP(5).
.TP 
\fBB\fP
Le champ appara\(^itra dans le fichier de contr\(^ole du paquet binaire, voir
\fBdeb\-control\fP(5).
.TP 
\fBC\fP
Le champ appara\(^itra dans le fichier de contr\(^ole d'envoi (.changes), voir
\fBdeb\-changes\fP(5).

.P
Veuillez noter que les pr\('efixes \fBX\fP[\fBSBC\fP]\fB\-\fP sont retir\('es quand les
champs sont copi\('es dans les fichiers de sortie. Un champ \fBXC\-Approved\-By\fP
appara\(^itra sous la forme \fBApproved\-By\fP dans le fichier des modifications et
n'appara\(^itra pas dans les fichiers de contr\(^ole des paquets binaires ou
source.

Il faut prendre en compte le fait que ces champs d\('efinis par l'utilisateur
se serviront de l'espace de nommage global lequel pourrait, dans le futur,
entrer en conflit avec des champs officiellement reconnus. Pour \('eviter de
telles situations, il est conseill\('e de les pr\('efixer avec \fBPrivate\-\fP
(exemple\ : \fBXB\-Private\-New\-Field\fP).

.SH EXEMPLE
.\" .RS
.nf
# Commentaire
Source: dpkg
Section: admin
Priority: required
Maintainer: Dpkg Developers <debian\-dpkg@lists.debian.org>
# ce champ est copi\('e dans les paquets source et binaires
XBS\-Upstream\-Release\-Status: stable
Homepage: https://wiki.debian.org/Teams/Dpkg
Vcs\-Browser: https://git.dpkg.org/cgit/dpkg/dpkg.git
Vcs\-Git: https://git.dpkg.org/git/dpkg/dpkg.git
Standards\-Version: 3.7.3
Build\-Depends: pkg\-config, debhelper (>= 4.1.81),
 libselinux1\-dev (>= 1.28\-4) [!linux\-any]

Package: dpkg\-dev
Section: utils
Priority: optional
Architecture: all
# champ personnalis\('e dans le paquet binaire
XB\-Mentoring\-Contact: Raphael Hertzog <hertzog@debian.org>
Depends: dpkg (>= 1.14.6), perl5, perl\-modules, cpio (>= 2.4.2\-2), bzip2, lzma,
 patch (>= 2.2\-1), make, binutils, libtimedate\-perl
Recommends: gcc | c\-compiler, build\-essential
Suggests: gnupg, debian\-keyring
Conflicts: dpkg\-cross (<< 2.0.0), devscripts (<< 2.10.26)
Replaces: manpages\-pl (<= 20051117\-1)
Description: Debian package development tools
 This package provides the development tools (including dpkg\-source)
 required to unpack, build and upload Debian source packages.
 .
 Most Debian source packages will require additional tools to build;
 for example, most packages need make and the C compiler gcc.
.fi


.\" .RE
.SH "VOIR AUSSI"
\fBdeb\-control\fP(5), \fBdeb\-version\fP(7), \fBdpkg\-source\fP(1)
.SH TRADUCTION
Ariel VARDI <ariel.vardi@freesbee.fr>, 2002.
Philippe Batailler, 2006.
Nicolas Fran\(,cois, 2006.
Veuillez signaler toute erreur \(`a <debian\-l10n\-french@lists.debian.org>.
