
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 NAAM

dpkg-architecture - de architectuur voor het bouwen van pakketten instellen
en vaststellen

=head1 OVERZICHT

B<dpkg-architecture> [I<optie>...] [I<commando>]

=head1 BESCHRIJVING

B<dpkg-architecture> biedt een mogelijkheid om de bouw- en host-architectuur
voor het bouwen van pakketten vast te stellen en in te stellen.

The build architecture is always determined by either the B<DEB_BUILD_ARCH>
variable if set (and B<--force> not being specified) or by an external call
to B<dpkg>(1), and cannot be set at the command line.

You can specify the host architecture by providing one or both of the
options B<--host-arch> and B<--host-type>, otherwise the B<DEB_HOST_ARCH>
variable is used if set (and B<--force> not being specified). The default is
determined by an external call to B<gcc>(1), or the same as the build
architecture if B<CC> or gcc are both not available. One out of
B<--host-arch> and B<--host-type> is sufficient, the value of the other will
be set to a usable default. Indeed, it is often better to only specify one,
because B<dpkg-architecture> will warn you if your choice does not match the
default.

=head1 COMMANDO'S

=over 

=item B<-l>, B<--list>

De omgevingsvariabelen weergeven, één per regel, volgens de indeling
I<VARIABELE=waarde>. Dit is de standaardactie.

=item B<-e>, B<--equal> I<architectuur>

Nagaan of de architecturen gelijk zijn (sinds dpkg 1.13.13). Het vergelijkt
de huidige of opgegeven Debian host-architectuur met I<architectuur> om na
te gaan of ze gelijk zijn. Deze actie zal geen architectuurjokertekens
verwerken. Het commando sluit af met een afsluitstatus 0 bij gelijkheid en 1
bij ongelijkheid.

=item B<-i>, B<--is> I<architectuurjokerteken>

Nagaan of de architecturen gelijk zijn (sinds dpkg 1.13.13). Het vergelijkt
de huidige of opgegeven Debian host-architectuur met
I<architectuurjokerteken>, nadat dit als een architectuurjokerteken verwerkt
werd, om na te gaan of beide gelijk zijn. Het commando sluit af met een
afsluitstatus 0 bij gelijkheid en 1 bij ongelijkheid.

=item B<-q>, B<--query> I<variabelenaam>

De waarde van één enkele variabele tonen.

=item B<-s>, B<--print-set>

Print an export command. This can be used to set the environment variables
using the POSIX shell or make B<eval>, depending on the output format.

=item B<-u>, B<--print-unset>

Print a similar command to B<--print-set> but to unset all variables.

=item B<-c>, B<--command> I<commando-tekenreeks>

Een I<commando-tekenreeks> uitvoeren in een omgeving waarin alle variabelen
ingesteld zijn op de vastgelegde waarde.

=item B<-L>, B<--list-known>

Een lijst van geldige architectuurbenamingen tonen. Kan eventueel ingeperkt
worden met een of meer van de vergelijkingsopties B<--match-wildcard>,
B<--match-bits> of B<--match-endian> (sinds dpkg 1.17.14).

=item B<-?>, B<--help>

Info tonen over het gebruik en afsluiten.

=item B<--version>

De versie tonen en afsluiten.

=back

=head1 OPTIES

=over 

=item B<-a>, B<--host-arch> I<architectuur>

De Debian-architectuur voor de host instellen.

=item B<-t>, B<--host-type> I<gnu-systeemtype>

Het GNU-systeemtype instellen voor de host.

=item B<-A>, B<--target-arch> I<architectuur>

De Debian-architectuur instellen voor het doel (sinds dpkg 1.17.14).

=item B<-T>, B<--target-type> I<gnu-systeemtype>

Het GNU-systeemtype instellen voor het doel (sinds dpkg 1.17.14).

=item B<-W>, B<--match-wildcard> I<architectuurjokerteken>

De architecturen die door B<--list-known> weergegeven worden, beperken tot
die welke beantwoorden aan het opgegeven architectuurjokerteken (sinds dpkg
1.17.14).

=item B<-B>, B<--match-bits> I<architectuur-bits>

De architecturen die door B<--list-known> weergegeven worden, beperken tot
die met de opgegeven CPU-bits (sinds dpkg 1.17.14). Ofwel B<32> ofwel B<64>.

=item B<-E>, B<--match-endian> I<architectuur-bytevolgorde>

De architecturen die door B<--list-known> weergegeven worden, beperken tot
die met de opgegeven bytevolgorde (endianness) (sinds dpkg 1.17.14). Ofwel
B<little> ofwel B<big>.

=item B<--print-format> I<format>

Sets the output format for B<--print-set> and B<--print-unset> (since dpkg
1.20.6), to either B<shell> (default) or B<make>.

=item B<-f>, B<--force>

Waarden die door bestaande omgevingsvariabelen ingesteld zijn en die
dezelfde naam hebben als die welke door de scripts gebruikt worden, worden
gehonoreerd (d.w.z. gebruikt door B<dpkg-architecture>), behalve wanneer
deze forceer-vlag gebruikt wordt. Dit laat de gebruiker toe om een waarde te
vervangen, zelfs als het aanroepen van B<dpkg-architecture> ingebed zit in
een ander script (bijvoorbeeld B<dpkg-buildpackage>(1)).

=back

=head1 TERMINOLOGIE

=over 

=item bouwmachine

De machine waarop het pakket gebouwd wordt.

=item hostmachine

De machine waarvoor het pakket gebouwd wordt.

=item doelmachine

De machine waarvoor de compiler bouwt. Dit is enkel nodig bij het bouwen van
een kruisgereedschapskist (cross-toolchain), een gereedschapskist die
gebouwd zal worden op de bouwarchitectuur om uitgevoerd te worden op de
hostarchitectuur en code moet bouwen voor de doelarchitectuur.

=item Debian-architectuur

De tekenreeks waarmee de Debian-architectuur aangeduid wordt en die ook de
boomstructuur met de binaire pakketten in het FTP-archief
specificeert. Voorbeelden: i386, sparc, hurd-i386.

=item Debian-architectuurtupel

Een Debian-architectuurtupel is de volledige unieke architectuurnaam met de
expliciete  vermelding van alle componenten. Dit verschilt minstens daarin
van een Debian architectuur dat de component I<cpu> niet de I<abi>
impliceert. Het huidige tupel heeft als vorm
I<abi>-I<libc>-I<os>-I<cpu>. Voorbeelden: base-gnu-linux-amd64,
eabihf-musl-linux-arm.

=item Debian-architectuurjokerteken

Een Debian-architectuurjokerteken is een speciale architectuurtekenreeks die
een overeenkomst oplevert met elke echte architectuur die er onder hoort. De
algemene vorm is een Debian-architectuurtupel met vier of minder elementen
en waarvan er minstens een B<any> is. Ontbrekende elementen van de tupel
worden impliciet als B<any> voorgevoegd, en dus zijn de volgende koppels
equivalent:

=over 

=item B<any>-B<any>-B<any>-B<any> = B<any>

=item B<any>-B<any>-I<os>-B<any> = I<os>-B<any>

=item B<any>-I<libc>-B<any>-B<any> = I<libc>-B<any>-B<any>

=back

Voorbeelden: linux-any, any-i386, hurd-any, eabi-any-any-arm, musl-any-any.

=item GNU-systeemtype

Een tekenreeks die een architectuurspecificatie inhoudt en bestaat uit twee
delen met daartussen een koppelteken: cpu en systeem. Voorbeelden:
i586-linux-gnu, sparc-linux-gnu, i686-gnu, x86_64-netbsd.

=item multiarch-triplet

Het uitgezuiverde GNU-systeemtype dat voor bestandssysteempaden gebruikt
wordt. Dit triplet verandert zelfs niet wanneer het referentie-ISA verhoogd
wordt, waardoor de resulterende paden stabiel blijven door de tijd. Het
enige verschil met het GNU-systeemtype is momenteel dat voor op i386
gebaseerde systemen het CPU-gedeelte steeds i386 is. Voorbeelden:
i386-linux-gnu, x86_64-linux-gnu. Voorbeelden van paden:
/lib/powerpc64le-linux-gnu/, /usr/lib/i386-kfreebsd-gnu/.

=back

=head1 VARIABELEN

The following variables are read from the environment (unless B<--force> has
been specified) and set by B<dpkg-architecture> (see the B<TERMS> section
for a description of the naming scheme):

=over 

=item B<DEB_BUILD_ARCH>

De Debian architectuur van de bouwmachine.

=item B<DEB_BUILD_ARCH_ABI>

The Debian ABI name of the build machine (since dpkg 1.18.11).

=item B<DEB_BUILD_ARCH_LIBC>

De Debian libc-naam van de bouwmachine (sinds dpkg 1.18.11).

=item B<DEB_BUILD_ARCH_OS>

De Debian systeemnaam van de bouwmachine (sinds dpkg 1.13.2).

=item B<DEB_BUILD_ARCH_CPU>

The Debian CPU name of the build machine (since dpkg 1.13.2).

=item B<DEB_BUILD_ARCH_BITS>

De pointergrootte van de bouwmachine (in bits; sinds dpkg 1.15.4).

=item B<DEB_BUILD_ARCH_ENDIAN>

De bytevolgorde (endianness) van de bouwmachine (little / big; sinds dpkg
1.15.4).

=item B<DEB_BUILD_GNU_CPU>

The GNU CPU part of B<DEB_BUILD_GNU_TYPE>.

=item B<DEB_BUILD_GNU_SYSTEM>

The GNU system part of B<DEB_BUILD_GNU_TYPE>.

=item B<DEB_BUILD_GNU_TYPE>

Het GNU-systeemtype van de bouwmachine.

=item B<DEB_BUILD_MULTIARCH>

Het uitgezuiverde GNU-systeemtype van de bouwmachine, dat gebruikt wordt
voor bestandssysteempaden (sinds dpkg 1.16.0).

=item B<DEB_HOST_ARCH>

De Debian architectuur van de hostmachine.

=item B<DEB_HOST_ARCH_ABI>

The Debian ABI name of the host machine (since dpkg 1.18.11).

=item B<DEB_HOST_ARCH_LIBC>

De Debian libc-naam van de hostmachine (sinds dpkg 1.18.11).

=item B<DEB_HOST_ARCH_OS>

De Debian systeemnaam van de hostmachine (sinds dpkg 1.13.2).

=item B<DEB_HOST_ARCH_CPU>

The Debian CPU name of the host machine (since dpkg 1.13.2).

=item B<DEB_HOST_ARCH_BITS>

De pointergrootte van de hostmachine (in bits; sinds dpkg 1.15.4).

=item B<DEB_HOST_ARCH_ENDIAN>

De bytevolgorde (endianness) van de hostmachine (little / big; sinds dpkg
1.15.4).

=item B<DEB_HOST_GNU_CPU>

The GNU CPU part of B<DEB_HOST_GNU_TYPE>.

=item B<DEB_HOST_GNU_SYSTEM>

The GNU system part of B<DEB_HOST_GNU_TYPE>.

=item B<DEB_HOST_GNU_TYPE>

Het GNU-systeemtype van de hostmachine.

=item B<DEB_HOST_MULTIARCH>

Het uitgezuiverde GNU-systeemtype van de hostmachine, dat gebruikt wordt
voor bestandssysteem-paden (sinds dpkg 1.16.0).

=item B<DEB_TARGET_ARCH>

De Debian architectuur van de doelmachine (sinds dpkg 1.17.14).

=item B<DEB_TARGET_ARCH_ABI>

The Debian ABI name of the target machine (since dpkg 1.18.11).

=item B<DEB_TARGET_ARCH_LIBC>

De Debian libc-naam van de doelmachine (sinds dpkg 1.18.11).

=item B<DEB_TARGET_ARCH_OS>

De Debian systeemnaam van de doelmachine (sinds dpkg 1.17.14).

=item B<DEB_TARGET_ARCH_CPU>

The Debian CPU name of the target machine (since dpkg 1.17.14).

=item B<DEB_TARGET_ARCH_BITS>

De pointergrootte van de doelmachine (in bits; sinds dpkg 1.17.14).

=item B<DEB_TARGET_ARCH_ENDIAN>

De bytevolgorde (endianness) van de doelmachine (little / big; sinds dpkg
1.17.14).

=item B<DEB_TARGET_GNU_CPU>

The GNU CPU part of B<DEB_TARGET_GNU_TYPE> (since dpkg 1.17.14).

=item B<DEB_TARGET_GNU_SYSTEM>

The GNU system part of B<DEB_TARGET_GNU_TYPE> (since dpkg 1.17.14).

=item B<DEB_TARGET_GNU_TYPE>

Het GNU-systeemtype van de doelmachine (sinds dpkg 1.17.14).

=item B<DEB_TARGET_MULTIARCH>

Het uitgezuiverde GNU-systeemtype van de doelmachine, dat gebruikt wordt
voor bestandssysteempaden (sinds dpkg 1.17.14).

=back

=head1 BESTANDEN

=head2 Architectuurtabellen

Al deze bestanden moeten aanwezig zijn, wil B<dpkg-architecture> kunnen
werken. Hun locatie kan veranderd worden bij de programmauitvoering met de
omgevingsvariabele B<DPKG_DATADIR>. Deze tabellen bevatten op hun eerste
regel een pseudo-veld format B<Version> om hun indeling aan te geven, zodat
ontleders kunnen nagaan of zij ermee kunnen omgaan, zoals "# Version=1.0".

=over 

=item I<%PKGDATADIR%/cputable>

Tabel met gekende CPU-namen en hun omzetting naar een GNU-naam. Indeling
versie 1.0 (sinds dpkg 1.13.2).

=item I<%PKGDATADIR%/ostable>

Tabel van gekende namen van besturingssystemen en hun omzetting naar een
GNU-naam. Indeling versie 2.0 (sinds dpkg 1.18.11).

=item I<%PKGDATADIR%/tupletable>

Omzetting tussen Debian architectuurtupels en Debian
architectuurnamen. Indeling versie 1.0 (sinds dpkg 1.18.11).

=item I<%PKGDATADIR%/abitable>

Tabel van Debian architectuur-ABI-attribuutvervangingen. Indeling versie 2.0
(sinds dpkg 1.18.11).

=back

=head2 Ondersteuning bij het maken van een pakket

=over 

=item I<%PKGDATADIR%/architecture.mk>

Makefile-fragment dat alle variabelen die B<dpkg-architecture> uitvoert,
behoorlijk instelt en exporteert (sinds dpkg 1.16.1).

=back

=head1 VOORBEELDEN

B<dpkg-buildpackage> kan gebruikt worden met de optie B<-a> en geeft die
door aan B<dpkg-architecture>. Andere voorbeelden:

=over 

 CC=i386-gnu-gcc dpkg-architecture -c debian/rules build

 eval $(dpkg-architecture -u)

=back

Verifiëren of de huidige of opgegeven hostarchitectuur gelijk is aan een
architectuur:

=over 

 dpkg-architecture -elinux-alpha

 dpkg-architecture -amips -elinux-mips

=back

Verifiëren of de huidige of opgegeven hostarchitectuur een Linux-systeem is:

=over 

 dpkg-architecture -ilinux-any

 dpkg-architecture -ai386 -ilinux-any

=back

=head2 Het gebruik in debian/rules

De omgevingsvariabelen die door B<dpkg-architecture> ingesteld worden,
worden doorgegeven aan I<debian/rules> als variabelen voor make (zie de
documentatie van make). U mag er echter niet op vertrouwen, aangezien dit
het handmatig uitvoeren van het script verhindert. In de plaats daarvan zou
u ze altijd moeten initialiseren met door B<dpkg-architecture> met de optie
B<-q> te gebruiken. Hier volgen enkele voorbeelden die ook illustreren hoe u
in uw pakket ondersteuning voor cross-compilatie kunt verbeteren:

Het opvragen van het GNU-systeemtype en dit doorgeven aan ./configure:

=over 

 DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
 DEB_HOST_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
 [...]
 ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
  confflags += --build=$(DEB_HOST_GNU_TYPE)
  else
   confflags += --build=$(DEB_BUILD_GNU_TYPE) \
                --host=$(DEB_HOST_GNU_TYPE)
 endif
 [...]
 ./configure $(confflags)

=back

Iets enkel voor een specifieke architectuur doen:

=over 

 DEB_HOST_ARCH ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)

 ifeq ($(DEB_HOST_ARCH),alpha)
   [...]
 endif

=back

of indien u enkel dient te controleren wat het type CPU of OS is, moet u de
variabele B<DEB_HOST_ARCH_CPU> of B<DEB_HOST_ARCH_OS> gebruiken.

Merk op dat u ook kunt betrouwen op een extern Makefile-fragment om al de
variabelen behoorlijk in te stellen die door B<dpkg-architecture> kunnen
aangeleverd worden:

=over 

 include %PKGDATADIR%/architecture.mk

 ifeq ($(DEB_HOST_ARCH),alpha)
   [...]
 endif

=back

In ieder geval moet u nooit B<dpkg --print-architecture> gebruiken om
architectuurinformatie te bekomen tijdens het bouwen van een pakket.

=head1 OMGEVING

=over 

=item B<DPKG_DATADIR>

Indien deze variabele een waarde heeft, zal ze gebruikt worden als de
data-map van B<dpkg> waarin zich de architectuurtabellen bevinden (sinds
dpkg 1.14.17). Staat standaard ingesteld op «%PKGDATADIR%».

=item B<DPKG_COLORS>

Stelt de kleurmodus in (sinds dpkg 1.18.5). Waarden die momenteel gebruikt
mogen worden zijn: B<auto> (standaard), B<always> en B<never>.

=item B<DPKG_NLS>

Indien dit ingesteld is, zal het gebruikt worden om te beslissen over het
activeren van moedertaalondersteuning, ook gekend als
internationaliseringsondersteuning (of i18n) (sinds dpkg 1.19.0). Geldige
waarden zijn: B<0> and B<1> (standaard).

=back

=head1 OPMERKINGEN

Alle lange commando- en optienamen kunnen slechts sinds dpkg 1.17.17
gebruikt worden.

=head1 ZIE OOK

B<dpkg-buildpackage>(1).

